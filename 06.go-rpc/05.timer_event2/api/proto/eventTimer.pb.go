// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: eventTimer.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TimerCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallbackUri string `protobuf:"bytes,1,opt,name=CallbackUri,proto3" json:"CallbackUri,omitempty"`
	SetTime     string `protobuf:"bytes,2,opt,name=SetTime,proto3" json:"SetTime,omitempty"`
	ExpireSec   int32  `protobuf:"varint,3,opt,name=ExpireSec,proto3" json:"ExpireSec,omitempty"`
	Data        string `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	RepeatCount int32  `protobuf:"varint,5,opt,name=RepeatCount,proto3" json:"RepeatCount,omitempty"`
}

func (x *TimerCreateRequest) Reset() {
	*x = TimerCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventTimer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerCreateRequest) ProtoMessage() {}

func (x *TimerCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventTimer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerCreateRequest.ProtoReflect.Descriptor instead.
func (*TimerCreateRequest) Descriptor() ([]byte, []int) {
	return file_eventTimer_proto_rawDescGZIP(), []int{0}
}

func (x *TimerCreateRequest) GetCallbackUri() string {
	if x != nil {
		return x.CallbackUri
	}
	return ""
}

func (x *TimerCreateRequest) GetSetTime() string {
	if x != nil {
		return x.SetTime
	}
	return ""
}

func (x *TimerCreateRequest) GetExpireSec() int32 {
	if x != nil {
		return x.ExpireSec
	}
	return 0
}

func (x *TimerCreateRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TimerCreateRequest) GetRepeatCount() int32 {
	if x != nil {
		return x.RepeatCount
	}
	return 0
}

type TimerCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallbackUri string `protobuf:"bytes,1,opt,name=CallbackUri,proto3" json:"CallbackUri,omitempty"`
	SetTime     string `protobuf:"bytes,2,opt,name=SetTime,proto3" json:"SetTime,omitempty"`
	ExpireSec   int32  `protobuf:"varint,3,opt,name=ExpireSec,proto3" json:"ExpireSec,omitempty"`
	Data        string `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	RepeatCount int32  `protobuf:"varint,5,opt,name=RepeatCount,proto3" json:"RepeatCount,omitempty"`
	TimerId     string `protobuf:"bytes,6,opt,name=TimerId,proto3" json:"TimerId,omitempty"` // CMD_CREATED, CMD_DELETE, CMD_EVENT
}

func (x *TimerCreateResponse) Reset() {
	*x = TimerCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventTimer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerCreateResponse) ProtoMessage() {}

func (x *TimerCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventTimer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerCreateResponse.ProtoReflect.Descriptor instead.
func (*TimerCreateResponse) Descriptor() ([]byte, []int) {
	return file_eventTimer_proto_rawDescGZIP(), []int{1}
}

func (x *TimerCreateResponse) GetCallbackUri() string {
	if x != nil {
		return x.CallbackUri
	}
	return ""
}

func (x *TimerCreateResponse) GetSetTime() string {
	if x != nil {
		return x.SetTime
	}
	return ""
}

func (x *TimerCreateResponse) GetExpireSec() int32 {
	if x != nil {
		return x.ExpireSec
	}
	return 0
}

func (x *TimerCreateResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TimerCreateResponse) GetRepeatCount() int32 {
	if x != nil {
		return x.RepeatCount
	}
	return 0
}

func (x *TimerCreateResponse) GetTimerId() string {
	if x != nil {
		return x.TimerId
	}
	return ""
}

type TimerDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimerId string `protobuf:"bytes,1,opt,name=TimerId,proto3" json:"TimerId,omitempty"` // CMD_CREATED, CMD_DELETE
}

func (x *TimerDeleteRequest) Reset() {
	*x = TimerDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventTimer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerDeleteRequest) ProtoMessage() {}

func (x *TimerDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventTimer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerDeleteRequest.ProtoReflect.Descriptor instead.
func (*TimerDeleteRequest) Descriptor() ([]byte, []int) {
	return file_eventTimer_proto_rawDescGZIP(), []int{2}
}

func (x *TimerDeleteRequest) GetTimerId() string {
	if x != nil {
		return x.TimerId
	}
	return ""
}

type TimerDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TimerDeleteResponse) Reset() {
	*x = TimerDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventTimer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerDeleteResponse) ProtoMessage() {}

func (x *TimerDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventTimer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerDeleteResponse.ProtoReflect.Descriptor instead.
func (*TimerDeleteResponse) Descriptor() ([]byte, []int) {
	return file_eventTimer_proto_rawDescGZIP(), []int{3}
}

func (x *TimerDeleteResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type TimerEventReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallbackUri string `protobuf:"bytes,1,opt,name=CallbackUri,proto3" json:"CallbackUri,omitempty"`
	SetTime     string `protobuf:"bytes,2,opt,name=SetTime,proto3" json:"SetTime,omitempty"`
	ExpireSec   int32  `protobuf:"varint,3,opt,name=ExpireSec,proto3" json:"ExpireSec,omitempty"`
	Data        string `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	RepeatCount int32  `protobuf:"varint,5,opt,name=RepeatCount,proto3" json:"RepeatCount,omitempty"`
	TimerId     string `protobuf:"bytes,6,opt,name=TimerId,proto3" json:"TimerId,omitempty"`     // CMD_CREATED, CMD_DELETE, CMD_EVENT
	EventTime   string `protobuf:"bytes,7,opt,name=EventTime,proto3" json:"EventTime,omitempty"` // CMD_EVENT
}

func (x *TimerEventReport) Reset() {
	*x = TimerEventReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventTimer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerEventReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerEventReport) ProtoMessage() {}

func (x *TimerEventReport) ProtoReflect() protoreflect.Message {
	mi := &file_eventTimer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerEventReport.ProtoReflect.Descriptor instead.
func (*TimerEventReport) Descriptor() ([]byte, []int) {
	return file_eventTimer_proto_rawDescGZIP(), []int{4}
}

func (x *TimerEventReport) GetCallbackUri() string {
	if x != nil {
		return x.CallbackUri
	}
	return ""
}

func (x *TimerEventReport) GetSetTime() string {
	if x != nil {
		return x.SetTime
	}
	return ""
}

func (x *TimerEventReport) GetExpireSec() int32 {
	if x != nil {
		return x.ExpireSec
	}
	return 0
}

func (x *TimerEventReport) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TimerEventReport) GetRepeatCount() int32 {
	if x != nil {
		return x.RepeatCount
	}
	return 0
}

func (x *TimerEventReport) GetTimerId() string {
	if x != nil {
		return x.TimerId
	}
	return ""
}

func (x *TimerEventReport) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

// Refer to https://github.com/jerray/chatroom-grpc-example/pb
type TimerMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Command:
	//	*TimerMsg_CreateReq
	//	*TimerMsg_CreateRsp
	//	*TimerMsg_DeleteReq
	//	*TimerMsg_DeleteRsp
	//	*TimerMsg_EventRpt
	Command isTimerMsg_Command `protobuf_oneof:"command"`
}

func (x *TimerMsg) Reset() {
	*x = TimerMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eventTimer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerMsg) ProtoMessage() {}

func (x *TimerMsg) ProtoReflect() protoreflect.Message {
	mi := &file_eventTimer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerMsg.ProtoReflect.Descriptor instead.
func (*TimerMsg) Descriptor() ([]byte, []int) {
	return file_eventTimer_proto_rawDescGZIP(), []int{5}
}

func (m *TimerMsg) GetCommand() isTimerMsg_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *TimerMsg) GetCreateReq() *TimerCreateRequest {
	if x, ok := x.GetCommand().(*TimerMsg_CreateReq); ok {
		return x.CreateReq
	}
	return nil
}

func (x *TimerMsg) GetCreateRsp() *TimerCreateResponse {
	if x, ok := x.GetCommand().(*TimerMsg_CreateRsp); ok {
		return x.CreateRsp
	}
	return nil
}

func (x *TimerMsg) GetDeleteReq() *TimerDeleteRequest {
	if x, ok := x.GetCommand().(*TimerMsg_DeleteReq); ok {
		return x.DeleteReq
	}
	return nil
}

func (x *TimerMsg) GetDeleteRsp() *TimerDeleteResponse {
	if x, ok := x.GetCommand().(*TimerMsg_DeleteRsp); ok {
		return x.DeleteRsp
	}
	return nil
}

func (x *TimerMsg) GetEventRpt() *TimerEventReport {
	if x, ok := x.GetCommand().(*TimerMsg_EventRpt); ok {
		return x.EventRpt
	}
	return nil
}

type isTimerMsg_Command interface {
	isTimerMsg_Command()
}

type TimerMsg_CreateReq struct {
	CreateReq *TimerCreateRequest `protobuf:"bytes,1,opt,name=createReq,proto3,oneof"`
}

type TimerMsg_CreateRsp struct {
	CreateRsp *TimerCreateResponse `protobuf:"bytes,2,opt,name=createRsp,proto3,oneof"`
}

type TimerMsg_DeleteReq struct {
	DeleteReq *TimerDeleteRequest `protobuf:"bytes,3,opt,name=deleteReq,proto3,oneof"`
}

type TimerMsg_DeleteRsp struct {
	DeleteRsp *TimerDeleteResponse `protobuf:"bytes,4,opt,name=deleteRsp,proto3,oneof"`
}

type TimerMsg_EventRpt struct {
	EventRpt *TimerEventReport `protobuf:"bytes,5,opt,name=eventRpt,proto3,oneof"`
}

func (*TimerMsg_CreateReq) isTimerMsg_Command() {}

func (*TimerMsg_CreateRsp) isTimerMsg_Command() {}

func (*TimerMsg_DeleteReq) isTimerMsg_Command() {}

func (*TimerMsg_DeleteRsp) isTimerMsg_Command() {}

func (*TimerMsg_EventRpt) isTimerMsg_Command() {}

var File_eventTimer_proto protoreflect.FileDescriptor

var file_eventTimer_proto_rawDesc = []byte{
	0x0a, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x67, 0x72, 0x70, 0x63, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x74, 0x69, 0x6d,
	0x65, 0x72, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x53,
	0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x53, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x52, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x13, 0x54, 0x69,
	0x6d, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x55, 0x72, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x53, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x53, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x20, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x12, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x13, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x10, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72,
	0x69, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x53, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x53, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a,
	0x0b, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe7, 0x02, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x4d, 0x73, 0x67, 0x12, 0x42, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x42, 0x0a,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x74, 0x69, 0x6d, 0x65,
	0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x43, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x73, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x70, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x32, 0x54, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12,
	0x46, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x4d, 0x0a, 0x13, 0x69, 0x6f, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x0f,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x23, 0x30, 0x36, 0x2e, 0x67, 0x6f, 0x2d, 0x72, 0x70, 0x63, 0x2f, 0x30, 0x35, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x32, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eventTimer_proto_rawDescOnce sync.Once
	file_eventTimer_proto_rawDescData = file_eventTimer_proto_rawDesc
)

func file_eventTimer_proto_rawDescGZIP() []byte {
	file_eventTimer_proto_rawDescOnce.Do(func() {
		file_eventTimer_proto_rawDescData = protoimpl.X.CompressGZIP(file_eventTimer_proto_rawDescData)
	})
	return file_eventTimer_proto_rawDescData
}

var file_eventTimer_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_eventTimer_proto_goTypes = []interface{}{
	(*TimerCreateRequest)(nil),  // 0: grpceventtimer.TimerCreateRequest
	(*TimerCreateResponse)(nil), // 1: grpceventtimer.TimerCreateResponse
	(*TimerDeleteRequest)(nil),  // 2: grpceventtimer.TimerDeleteRequest
	(*TimerDeleteResponse)(nil), // 3: grpceventtimer.TimerDeleteResponse
	(*TimerEventReport)(nil),    // 4: grpceventtimer.TimerEventReport
	(*TimerMsg)(nil),            // 5: grpceventtimer.TimerMsg
}
var file_eventTimer_proto_depIdxs = []int32{
	0, // 0: grpceventtimer.TimerMsg.createReq:type_name -> grpceventtimer.TimerCreateRequest
	1, // 1: grpceventtimer.TimerMsg.createRsp:type_name -> grpceventtimer.TimerCreateResponse
	2, // 2: grpceventtimer.TimerMsg.deleteReq:type_name -> grpceventtimer.TimerDeleteRequest
	3, // 3: grpceventtimer.TimerMsg.deleteRsp:type_name -> grpceventtimer.TimerDeleteResponse
	4, // 4: grpceventtimer.TimerMsg.eventRpt:type_name -> grpceventtimer.TimerEventReport
	5, // 5: grpceventtimer.EventTimer.TimerEvent:input_type -> grpceventtimer.TimerMsg
	5, // 6: grpceventtimer.EventTimer.TimerEvent:output_type -> grpceventtimer.TimerMsg
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_eventTimer_proto_init() }
func file_eventTimer_proto_init() {
	if File_eventTimer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eventTimer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventTimer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventTimer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventTimer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventTimer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerEventReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eventTimer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_eventTimer_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*TimerMsg_CreateReq)(nil),
		(*TimerMsg_CreateRsp)(nil),
		(*TimerMsg_DeleteReq)(nil),
		(*TimerMsg_DeleteRsp)(nil),
		(*TimerMsg_EventRpt)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eventTimer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eventTimer_proto_goTypes,
		DependencyIndexes: file_eventTimer_proto_depIdxs,
		MessageInfos:      file_eventTimer_proto_msgTypes,
	}.Build()
	File_eventTimer_proto = out.File
	file_eventTimer_proto_rawDesc = nil
	file_eventTimer_proto_goTypes = nil
	file_eventTimer_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EventTimerClient is the client API for EventTimer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventTimerClient interface {
	TimerEvent(ctx context.Context, opts ...grpc.CallOption) (EventTimer_TimerEventClient, error)
}

type eventTimerClient struct {
	cc grpc.ClientConnInterface
}

func NewEventTimerClient(cc grpc.ClientConnInterface) EventTimerClient {
	return &eventTimerClient{cc}
}

func (c *eventTimerClient) TimerEvent(ctx context.Context, opts ...grpc.CallOption) (EventTimer_TimerEventClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventTimer_serviceDesc.Streams[0], "/grpceventtimer.EventTimer/TimerEvent", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventTimerTimerEventClient{stream}
	return x, nil
}

type EventTimer_TimerEventClient interface {
	Send(*TimerMsg) error
	Recv() (*TimerMsg, error)
	grpc.ClientStream
}

type eventTimerTimerEventClient struct {
	grpc.ClientStream
}

func (x *eventTimerTimerEventClient) Send(m *TimerMsg) error {
	return x.ClientStream.SendMsg(m)
}

func (x *eventTimerTimerEventClient) Recv() (*TimerMsg, error) {
	m := new(TimerMsg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EventTimerServer is the server API for EventTimer service.
type EventTimerServer interface {
	TimerEvent(EventTimer_TimerEventServer) error
}

// UnimplementedEventTimerServer can be embedded to have forward compatible implementations.
type UnimplementedEventTimerServer struct {
}

func (*UnimplementedEventTimerServer) TimerEvent(EventTimer_TimerEventServer) error {
	return status.Errorf(codes.Unimplemented, "method TimerEvent not implemented")
}

func RegisterEventTimerServer(s *grpc.Server, srv EventTimerServer) {
	s.RegisterService(&_EventTimer_serviceDesc, srv)
}

func _EventTimer_TimerEvent_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(EventTimerServer).TimerEvent(&eventTimerTimerEventServer{stream})
}

type EventTimer_TimerEventServer interface {
	Send(*TimerMsg) error
	Recv() (*TimerMsg, error)
	grpc.ServerStream
}

type eventTimerTimerEventServer struct {
	grpc.ServerStream
}

func (x *eventTimerTimerEventServer) Send(m *TimerMsg) error {
	return x.ServerStream.SendMsg(m)
}

func (x *eventTimerTimerEventServer) Recv() (*TimerMsg, error) {
	m := new(TimerMsg)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _EventTimer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpceventtimer.EventTimer",
	HandlerType: (*EventTimerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "TimerEvent",
			Handler:       _EventTimer_TimerEvent_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "eventTimer.proto",
}
